{"repository_name":"github.com/rmarronnier/franca","body":"# Language Detector\n\n![](https://github.com/cadmiumcr/language_detector/workflows/language_detector/badge.svg)\n\nCrystal port of [franc](https://github.com/wooorm/franc).\n\nIt's not the state-of-the-art algorithm on language identification, but gets 90%+ success on long enough text samples.\n\nIt supports 400+ languages.\n\nIt identifies any given text sample by extracting its 3 characters trigrams and comparing them to the most recurring trigrams extracted from a translation of the [UDHR](https://www.un.org/en/universal-declaration-human-rights/) in all the available languages.\n\nLanguage Detector returns the ISO-869-1 two letters language code of the most probable guess.\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     cadmium_language_detector:\n       github: cadmiumcr/language_detector\n   ```\n\n2. Run `shards install`\n\n## Usage\n\n```crystal\nrequire \"cadmium_language_detector\"\n\ntext = \"Alice was published in 1865, three years after Charles Lutwidge Dodgson and the Reverend Robinson Duckworth rowed in a\nboat, on 4 July 1862 [4] (this popular date of the golden afternoon [5] might be a confusion or even another Alice-tale, for that\nparticular day was cool, cloudy and rainy [6] ), up the Isis with the three young daughters of Henry Liddell (the Vice-Chancellor ofOxford University and Dean of Christ Church): Lorina Charlotte Liddell (aged\n13, born 1849) (Prima in the book's prefatory verse); Alice Pleasance Liddell\n(aged 10, born 1852) (Secunda in the prefatory verse); Edith Mary Liddell\n(aged 8, born 1853) (Tertia in the prefatory verse). [7]\nThe journey began at Folly Bridge near Oxford and ended five miles away in the\nvillage of Godstow. During the trip Charles Dodgson told the girls a story that\nfeatured a bored little girl named Alice who goes looking for an adventure. The\ngirls loved it, and Alice Liddell asked Dodgson to write it down for her. He\nbegan writing the manuscript of the story the next day, although that earliest\nversion no longer exists. The girls and Dodgson took another boat trip a month\nlater when he elaborated the plot to the story of Alice, and in November he\nbegan working on the manuscript in earnest.\"\n\npp LanguageDetector.new.detect(text) # => \"en\"\n\n```\n\n\n\n## Contributing\n\n1. Fork it (<https://github.com/cadmiumcr/language_detector/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [RÃ©my Marronnier](https://github.com/rmarronnier) - creator and maintainer\n","program":{"html_id":"github.com/rmarronnier/franca/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/rmarronnier/franca","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/rmarronnier/franca/Cadmium","path":"Cadmium.html","kind":"module","full_name":"Cadmium","name":"Cadmium","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cadmium/language_detector/language.cr","line_number":1,"url":"https://github.com/rmarronnier/franca/blob/2dd915f641cd15d2f043972920e7112a1623b75f/src/cadmium/language_detector/language.cr"},{"filename":"cadmium/language_detector/language_detector.cr","line_number":4,"url":"https://github.com/rmarronnier/franca/blob/2dd915f641cd15d2f043972920e7112a1623b75f/src/cadmium/language_detector/language_detector.cr"}],"repository_name":"github.com/rmarronnier/franca","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/rmarronnier/franca/Cadmium/Language","path":"Cadmium/Language.html","kind":"module","full_name":"Cadmium::Language","name":"Language","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cadmium/language_detector/language.cr","line_number":2,"url":"https://github.com/rmarronnier/franca/blob/2dd915f641cd15d2f043972920e7112a1623b75f/src/cadmium/language_detector/language.cr"}],"repository_name":"github.com/rmarronnier/franca","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/rmarronnier/franca/Cadmium/LanguageDetector","kind":"class","full_name":"Cadmium::LanguageDetector","name":"LanguageDetector"}],"namespace":{"html_id":"github.com/rmarronnier/franca/Cadmium","kind":"module","full_name":"Cadmium","name":"Cadmium"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/rmarronnier/franca/Cadmium/Language/IsoCode3To1","path":"Cadmium/Language/IsoCode3To1.html","kind":"struct","full_name":"Cadmium::Language::IsoCode3To1","name":"IsoCode3To1","abstract":false,"superclass":{"html_id":"github.com/rmarronnier/franca/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/rmarronnier/franca/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/rmarronnier/franca/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/rmarronnier/franca/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/language_detector/language.cr","line_number":3,"url":"https://github.com/rmarronnier/franca/blob/2dd915f641cd15d2f043972920e7112a1623b75f/src/cadmium/language_detector/language.cr"}],"repository_name":"github.com/rmarronnier/franca","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/rmarronnier/franca/Cadmium/Language","kind":"module","full_name":"Cadmium::Language","name":"Language"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/rmarronnier/franca/blob/2dd915f641cd15d2f043972920e7112a1623b75f/src/cadmium/language_detector/language.cr#L3","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"id":"codes:Hash(String,String)-instance-method","html_id":"codes:Hash(String,String)-instance-method","name":"codes","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, String)","source_link":"https://github.com/rmarronnier/franca/blob/2dd915f641cd15d2f043972920e7112a1623b75f/src/cadmium/language_detector/language.cr#L418","def":{"name":"codes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String)","visibility":"Public","body":"@codes"}}],"macros":[],"types":[]},{"html_id":"github.com/rmarronnier/franca/Cadmium/Language/LanguageData","path":"Cadmium/Language/LanguageData.html","kind":"class","full_name":"Cadmium::Language::LanguageData","name":"LanguageData","abstract":false,"superclass":{"html_id":"github.com/rmarronnier/franca/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/rmarronnier/franca/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/rmarronnier/franca/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/language_detector/language.cr","line_number":420,"url":"https://github.com/rmarronnier/franca/blob/2dd915f641cd15d2f043972920e7112a1623b75f/src/cadmium/language_detector/language.cr"}],"repository_name":"github.com/rmarronnier/franca","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"DATA_FILE","name":"DATA_FILE","value":"\"/home/remy/dev/language_detector/src/cadmium/language_detector/../data/data.json\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/rmarronnier/franca/Cadmium/Language","kind":"module","full_name":"Cadmium::Language","name":"Language"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/rmarronnier/franca/blob/2dd915f641cd15d2f043972920e7112a1623b75f/src/cadmium/language_detector/language.cr#L464","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"expressions:Hash(String,Regex)-instance-method","html_id":"expressions:Hash(String,Regex)-instance-method","name":"expressions","doc":"\"Reference \": \"htt =>\":/ =>www.unicode.org/Public/UNIDATA/Blocks.txt\nRemoved utf-16 characters because crystal pcre regex implementation doesn't support them","summary":"<p>\"Reference \": \"htt =>\":/ =>www.unicode.org/Public/UNIDATA/Blocks.txt Removed utf-16 characters because crystal pcre regex implementation doesn't support them</p>","abstract":false,"args":[],"args_string":" : Hash(String, Regex)","source_link":"https://github.com/rmarronnier/franca/blob/2dd915f641cd15d2f043972920e7112a1623b75f/src/cadmium/language_detector/language.cr#L461","def":{"name":"expressions","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, Regex)","visibility":"Public","body":"@expressions"}},{"id":"trigrams:Hash(String,Hash(String,String))-instance-method","html_id":"trigrams:Hash(String,Hash(String,String))-instance-method","name":"trigrams","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, Hash(String, String))","source_link":"https://github.com/rmarronnier/franca/blob/2dd915f641cd15d2f043972920e7112a1623b75f/src/cadmium/language_detector/language.cr#L464","def":{"name":"trigrams","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, Hash(String, String))","visibility":"Public","body":"@trigrams"}}],"macros":[],"types":[]}]},{"html_id":"github.com/rmarronnier/franca/Cadmium/LanguageDetector","path":"Cadmium/LanguageDetector.html","kind":"class","full_name":"Cadmium::LanguageDetector","name":"LanguageDetector","abstract":false,"superclass":{"html_id":"github.com/rmarronnier/franca/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/rmarronnier/franca/Cadmium/Language","kind":"module","full_name":"Cadmium::Language","name":"Language"},{"html_id":"github.com/rmarronnier/franca/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/rmarronnier/franca/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/language_detector/language_detector.cr","line_number":6,"url":"https://github.com/rmarronnier/franca/blob/2dd915f641cd15d2f043972920e7112a1623b75f/src/cadmium/language_detector/language_detector.cr"}],"repository_name":"github.com/rmarronnier/franca","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/rmarronnier/franca/Cadmium/Language","kind":"module","full_name":"Cadmium::Language","name":"Language"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/rmarronnier/franca/Cadmium","kind":"module","full_name":"Cadmium","name":"Cadmium"},"doc":"Cadmium::LanguageDetector is a Language Identification algorithm which identifies up to 400 different languages.","summary":"<p>Cadmium::LanguageDetector is a Language Identification algorithm which identifies up to 400 different languages.</p>","class_methods":[],"constructors":[{"id":"new(whitelist=@@whitelist,blacklist=@@blacklist)-class-method","html_id":"new(whitelist=@@whitelist,blacklist=@@blacklist)-class-method","name":"new","doc":"TODO Symbolize\nA LanguageDetector object can be initiampized with a whitelist and/or blacklist of languages. Those lists have to be Tuple of String.\nA LanguageDetector object can be initiampized with a whitelist and/or blacklist of languages. Those lists have to be Tuple of String.\nA LanguageDetector object can be initiampized with a whitelist and/or blacklist of languages. Those lists have to be Tuple of String.","summary":"<p><span class=\"flag orange\">TODO</span>  Symbolize A LanguageDetector object can be initiampized with a whitelist and/or blacklist of languages.</p>","abstract":false,"args":[{"name":"whitelist","doc":null,"default_value":"@@whitelist","external_name":"whitelist","restriction":""},{"name":"blacklist","doc":null,"default_value":"@@blacklist","external_name":"blacklist","restriction":""}],"args_string":"(whitelist = @@whitelist, blacklist = @@blacklist)","source_link":"https://github.com/rmarronnier/franca/blob/2dd915f641cd15d2f043972920e7112a1623b75f/src/cadmium/language_detector/language_detector.cr#L16","def":{"name":"new","args":[{"name":"whitelist","doc":null,"default_value":"@@whitelist","external_name":"whitelist","restriction":""},{"name":"blacklist","doc":null,"default_value":"@@blacklist","external_name":"blacklist","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(whitelist, blacklist)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"detect(text:String):String-instance-method","html_id":"detect(text:String):String-instance-method","name":"detect","doc":"Returns a two letters string corresponding to the ISO-868-1 code of the detected language.","summary":"<p>Returns a two letters string corresponding to the ISO-868-1 code of the detected language.</p>","abstract":false,"args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"}],"args_string":"(text : String) : String","source_link":"https://github.com/rmarronnier/franca/blob/2dd915f641cd15d2f043972920e7112a1623b75f/src/cadmium/language_detector/language_detector.cr#L39","def":{"name":"detect","args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"result = (detect_all(text)).keys[0]\n@@iso_hash.fetch(result, result)\n"}},{"id":"detect_all(text:String):Hash(String,Float64)-instance-method","html_id":"detect_all(text:String):Hash(String,Float64)-instance-method","name":"detect_all","doc":"Returns an Hash of two letters string corresponding to the ISO-868-1 code of the detected language mapped to their probability.","summary":"<p>Returns an Hash of two letters string corresponding to the ISO-868-1 code of the detected language mapped to their probability.</p>","abstract":false,"args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"}],"args_string":"(text : String) : Hash(String, Float64)","source_link":"https://github.com/rmarronnier/franca/blob/2dd915f641cd15d2f043972920e7112a1623b75f/src/cadmium/language_detector/language_detector.cr#L45","def":{"name":"detect_all","args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, Float64)","visibility":"Public","body":"expression = get_top_expression(text, @@expressions)\nif @@trigrams_data.keys.includes?(expression.keys[0])\nelse\n  return {expression.keys[0] => 1.0}\nend\nnormalize(text, get_distances(trigrams_and_value(text), @@languages))\n"}}],"macros":[],"types":[]}]}]}}